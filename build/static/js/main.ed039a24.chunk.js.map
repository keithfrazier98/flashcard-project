{"version":3,"sources":["Layout/Header.js","Layout/NotFound.js","components/ViewBtn.js","components/StudyBtn.js","utils/api/index.js","components/DeleteDeckBtn.js","components/Decks.js","components/CreateDeckBtn.js","Screens/Home.js","components/AddCardsBtn.js","Screens/Study.js","Screens/CreateDeck.js","components/DeleteCardBtn.js","components/EditDeckBtn.js","components/EditCardBtn.js","Screens/View.js","Screens/EditDeck.js","Screens/EditCard.js","Screens/AddCards.js","Layout/index.js","App.js","index.js"],"names":["Header","className","NotFound","ViewBtn","deck","to","id","type","color","title","style","marginRight","StudyBtn","url","useRouteMatch","deckId","useParams","marginLeft","API_BASE_URL","process","headers","Headers","stripCards","cards","fetchJson","options","a","fetch","response","status","Error","statusText","json","name","listDecks","signal","method","body","JSON","stringify","readDeck","updatedDeck","deleteDeck","card","Number","cardId","updatedCard","append","DeleteDeckBtn","setCurrentDecks","path","history","useHistory","onClick","event","target","closest","window","confirm","push","then","prevState","error","console","log","Decks","currentDecks","useState","deckCards","setDeckCards","createDeckCards","decks","map","index","description","margin","length","marginTop","useEffect","CreateDeckBtn","Home","AddCardsBtn","Study","cardInfo","setCardInfo","currentCard","setCurrentCard","currentCards","setCurrentCards","currentDeck","setCurrentDeck","flip","setFlip","result","front","back","getDeck","marginBottom","aria-label","listStyle","display","current","CreateDeck","setDeck","initialDeck","handleChange","value","onSubmit","preventDefault","children","createDeck","for","width","onChange","rows","clickedCard","deleteCard","listCards","dataset","deckid","EditDeckBtn","class","EditCardBtn","View","list","data-deckid","padding","DeleteCardBtn","EditDeck","goBack","claclassNamess","updateDeck","EditCard","readCard","updateCard","AddCards","createCard","alert","Layout","exact","setCurrrentDeck","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed039a24.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header className=\"jumbotron bg-dark\">\n      <div className=\"container text-white\">\n        <h1 className=\"display-4\">Flashcard-o-matic</h1>\n        <p className=\"lead\">Discover The Flashcard Difference.</p>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h1>Not Found</h1>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { EyeOutline } from \"react-ionicons\";\r\n\r\nfunction ViewBtn({ deck }) {\r\n  return (\r\n    <Link to={`/decks/${deck.id}`} type=\"button\" className=\"btn btn-secondary\">\r\n      <EyeOutline\r\n        color={\"#00000\"}\r\n        title={\"view-deck\"}\r\n        style={{ marginRight: \"10px\" }}\r\n      />\r\n      View\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default ViewBtn;\r\n","import React from \"react\";\r\nimport { Link, useRouteMatch, useParams } from \"react-router-dom\";\r\nimport { LibraryOutline } from \"react-ionicons\"\r\n\r\nfunction StudyBtn({ deck }) {\r\n  // studyBtn is called from two different places, so depending on the screen it will have access to the deckID in a different way\r\n  const { url } = useRouteMatch();\r\n  const { deckId } = useParams();\r\n\r\n  if (url === \"/\") {\r\n    return (\r\n      <Link\r\n      to={`/decks/${deck.id}/study`}\r\n      type=\"button\"\r\n      className=\"btn btn-primary\"\r\n    >\r\n      <LibraryOutline color={\"#00000\"} title={\"study-deck\"} style={{marginRight:\"10px\"}} />\r\n      Study\r\n    </Link>\r\n    );\r\n  } else {\r\n    return (\r\n      <Link\r\n        to={`/decks/${deckId}/study`}\r\n        type=\"button\"\r\n        className=\"btn btn-primary\"\r\n        style={{ marginLeft: \"10px\" }}\r\n      >\r\n        <LibraryOutline color={\"#00000\"} title={\"study-deck\"} style={{marginRight:\"10px\"}} />\r\n        Study\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StudyBtn;\r\n","/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\nconst API_BASE_URL = process.env.API_BASE_URL || \"http://localhost:5000\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n/**\n * Removes the `cards` property from the deck so it is not accidentally saved with the deck.\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param deck\n *  the deck instance\n * @returns {*}\n *  a copy of the deck instance with the `cards` property removed.\n */\nfunction stripCards(deck) {\n  const { cards, ...deckWithoutCards } = deck;\n  return deckWithoutCards;\n}\n\n/**\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param url\n *  the url for the requst.\n * @param options\n *  any options for fetch\n * @returns {Promise<Error|any>}\n *  a promise that resolves to the `json` data or an error.\n *  If the response is not in the 200 - 399 range the promise is rejected.\n */\nasync function fetchJson(url, options) {\n  try {\n    const response = await fetch(url, options);\n    if (response.status < 200 || response.status > 399) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      throw error;\n    }\n  }\n}\n\n/**\n * Retrieves all existing decks.\n * @returns {Promise<[deck]>}\n *  a promise that resolves to a possibly empty array of decks saved in the database.\n */\nexport async function listDecks(signal) {\n  const url = `${API_BASE_URL}/decks?_embed=cards`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Saves deck to the database (public/data/db.json).\n * There is no validation done on the deck object, any object will be saved.\n * @param deck\n *  the deck to save, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<deck>}\n *  a promise that resolves the saved deck, which will now have an `id` property.\n */\nexport async function createDeck(deck, signal) {\n  const url = `${API_BASE_URL}/decks`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(stripCards(deck)),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves the deck with the specified `deckId`\n * @param deckId\n *  the `id` property matching the desired deck.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<any>}\n *  a promise that resolves to the saved deck.\n */\nexport async function readDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}?_embed=cards`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Updates an existing deck\n * @param updatedDeck\n *  the deck to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated deck.\n */\nexport async function updateDeck(updatedDeck, signal) {\n  const url = `${API_BASE_URL}/decks/${updatedDeck.id}?_embed=cards`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(stripCards(updatedDeck)),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Deletes the deck with the specified `deckId`.\n * @param deckId\n *  the id of the deck to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves all cards associated with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to a possible empty array of cards.\n */\nexport async function listCards(deckId, signal) {\n  const url = `${API_BASE_URL}/cards?deckId=${deckId}`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Creates a new card associated with the specified `deckId`.\n * There is no validation that there is an existing deck with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param card\n *  the card to create, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the new card, which will have an `id` property.\n */\nexport async function createCard(deckId, card, signal) {\n  // There is a bug in json-server, if you post to /decks/:deckId/cards the associated deckId is a string\n  // and the card is not related to the deck because the data types of the ID's are different.\n  const url = `${API_BASE_URL}/cards`;\n  card.deckId = Number(deckId);\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(card),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves the card with the specified `cardId`\n * @param cardId\n *  the id of the target\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the saved card.\n */\nexport async function readCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Updates an existing deck\n * @param updatedCard\n *  the card to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated card.\n */\nexport async function updateCard(updatedCard, signal) {\n  const url = `${API_BASE_URL}/cards/${updatedCard.id}`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(updatedCard),\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Deletes the card with the specified `cardId`.\n * @param cardId\n *  the id of the card to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n","import React from \"react\";\r\nimport { deleteDeck, listDecks } from \"../utils/api/index\";\r\nimport { useRouteMatch, useParams, useHistory } from \"react-router-dom\";\r\nimport { TrashOutline } from \"react-ionicons\";\r\n\r\n//delete component to return delete button and handle deletion of deck\r\n\r\nfunction DeleteDeckBtn({ setCurrentDecks }) {\r\n  //create newDecks variable in Delete scope, to be set by deleteDeck and returned by Delete\r\n  const { path } = useRouteMatch();\r\n  const { deckId } = useParams();\r\n  const history = useHistory()\r\n  function deleter(event) {\r\n\r\n    const id = event.target.closest(\".card\").id;\r\n\r\n    // if user confirms delete, filter decks by comparing index to deck id and assign result to newDecks\r\n    if (window.confirm(\"Are you sure you want to delete this deck?\")) {\r\n      try {\r\n        if (path === \"/decks/:deckId\") {\r\n          deleteDeck(deckId);\r\n          history.push(\"/\");\r\n        } else {\r\n          deleteDeck(id);\r\n        }\r\n        listDecks().then((response) => {\r\n          setCurrentDecks((prevState) => (prevState = response));\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n      <div className=\"d-flex\">\r\n        <button\r\n          className=\"btn btn-danger\"\r\n          onClick={deleter}\r\n        >\r\n          <div>\r\n            {<TrashOutline color={\"#00000\"} title=\"delete-deck\" />}\r\n          </div>\r\n        </button>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default DeleteDeckBtn;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ViewBtn from \"./ViewBtn\";\r\nimport StudyBtn from \"./StudyBtn\";\r\nimport DeleteDeckBtn from \"./DeleteDeckBtn\";\r\nimport { listDecks } from \"../utils/api/index\";\r\n\r\nfunction Decks({ currentDecks, setCurrentDecks }) {\r\n  const [deckCards, setDeckCards] = useState([]);\r\n\r\n  function createDeckCards(decks) {\r\n    //map current decks to deckCards variable, creating a list of html elements to display on home screen\r\n    const deckCards = decks.map((deck, index) => {\r\n      const { id, name, description, cards } = deck;\r\n      return (\r\n        <div\r\n          key={index}\r\n          className=\"card\"\r\n          id={`${id}`}\r\n          style={{ margin: \"margin: 20px 20px 20px 20px \" }}\r\n        >\r\n          <div className=\"card-body container\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              <h3 className=\"card-title\">{name}</h3>\r\n              <h6>{cards.length} cards</h6>\r\n            </div>\r\n\r\n            <div className=\"card-text\">{description}</div>\r\n            <div className=\"container\">\r\n              <div className=\"row\" style={{ marginTop: \"10px\" }}>\r\n                <div className=\"card-link\">{<ViewBtn deck={deck} />}</div>\r\n                <div className=\"card-link\">{<StudyBtn deck={deck} />}</div>\r\n                <div className=\"card-link\">\r\n                  {\r\n                    // pass deck state to delete to handle deletion\r\n                    <DeleteDeckBtn\r\n                      setCurrentDecks={setCurrentDecks}\r\n                      currentDecks={currentDecks}\r\n                      index={index}\r\n                    />\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    return deckCards;\r\n  }\r\n\r\n  useEffect(() => {\r\n    listDecks().then(createDeckCards).then(setDeckCards);\r\n  }, [currentDecks]);\r\n\r\n  return <>{deckCards}</>;\r\n}\r\n\r\nexport default Decks;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AddOutline } from \"react-ionicons\";\r\n\r\nfunction CreateDeckBtn() {\r\n  return (\r\n    <Link\r\n      type=\"button\"\r\n      to=\"/decks/new\"\r\n      style={{ margin: \"0px 0px 20px 0px\" }}\r\n      className=\"btn btn-primary\"\r\n    >\r\n      <AddOutline color={\"#00000\"} title={\"create-deck\"} style={{marginRight:\"10px\"}} />\r\n      Create Deck\r\n    </Link>\r\n  );\r\n}\r\nexport default CreateDeckBtn;\r\n","import React from \"react\";\r\nimport Decks from \"../components/Decks\";\r\nimport CreateDeckBtn from \"../components/CreateDeckBtn\";\r\n\r\nfunction Home({\r\n  currentDecks,\r\n  setCurrentDecks,\r\n}) {\r\n  return (\r\n    <>\r\n      <CreateDeckBtn />\r\n      <Decks\r\n        setCurrentDecks={setCurrentDecks}\r\n        currentDecks={currentDecks}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { AddOutline } from \"react-ionicons\";\r\n\r\nfunction AddCardsBtn() {\r\n  const {deckId} = useParams()\r\n  return (\r\n    <Link\r\n      to={`/decks/${deckId}/cards/new`}\r\n      type=\"button\"\r\n      style={{ margin: \"0 0 0 10px\" }}\r\n      className=\"btn btn-primary\"\r\n    >\r\n      <AddOutline color={\"#00000\"} title={\"add-cards\"} style={{marginRight:\"10px\"}} />\r\n      Add Cards\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default AddCardsBtn;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport { readDeck } from \"../utils/api/index\";\r\nimport { ReloadOutline, ChevronForwardOutline } from \"react-ionicons\";\r\nimport AddCardsBtn from \"../components/AddCardsBtn\";\r\n\r\nfunction Study({\r\n  cardInfo,\r\n  setCardInfo,\r\n  currentCard,\r\n  setCurrentCard,\r\n  currentCards,\r\n  setCurrentCards,\r\n  currentDeck,\r\n  setCurrentDeck,\r\n}) {\r\n  const { deckId } = useParams();\r\n  const history = useHistory()\r\n\r\n  const [flip, setFlip] = useState(true);\r\n\r\n  function handleFlip() {\r\n    setFlip(current => (current = !flip));\r\n  }\r\n\r\n  function handleClick() {\r\n    if (currentCard < currentCards.length) {\r\n      setCurrentCard((prevState) => (prevState = prevState + 1));\r\n      setFlip((prevState) => (prevState = !flip));\r\n    } else {\r\n      if (window.confirm(\"Do you want to reset the deck?\")) {\r\n        setCurrentCard((prevState) => (prevState = 1));\r\n        setFlip(true);\r\n      } else {\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function getDeck() {\r\n      const result = await readDeck(deckId);\r\n      const card = currentCard - 1;\r\n      try {\r\n        setCardInfo({\r\n          id: result.cards[card].id,\r\n          front: result.cards[card].front,\r\n          back: result.cards[card].back,\r\n          deckId: result.cards[card].deckId,\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n\r\n      setCurrentDeck(result);\r\n      setCurrentCards(result.cards);\r\n    }\r\n\r\n    getDeck();\r\n  }, [currentCard]);\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column\">\r\n      <div\r\n        className=\"container-fluid d-flex justify-content-center\"\r\n        style={{ marginBottom: \"20px\" }}\r\n      >\r\n        <nav aria-label=\"breadcrum\" className=\"navbar navbar-light bg-light col-9\">\r\n          <ol style={{ listStyle: \"none\", display: \"flex\" }}>\r\n            <li className=\"breadcrumb-item\">\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n\r\n            <li className=\"breadcrumb-item\">\r\n              <Link to={`/decks/${deckId}`}>{currentDeck.name}</Link>\r\n            </li>\r\n            <li className=\"breadcrumb-item active\">Study</li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n\r\n      <div className=\"container-fluid d-flex justify-content-center\">\r\n        <h2>{currentDeck.name}: Study</h2>\r\n      </div>\r\n      <div className=\"container-fluid card d-flex justify-content-center col-9\">\r\n        {currentCards.length > 2 ? (\r\n          <div className=\"card-body\">\r\n            <h4>\r\n              Card {currentCard} of {currentCards.length}\r\n            </h4>\r\n            <p>{flip ? cardInfo.front : cardInfo.back}</p>\r\n\r\n            <div className=\"container d-flex\">\r\n              <div className=\"row\">\r\n                {flip ? (\r\n                  <button\r\n                    type=\"btn\"\r\n                    onClick={handleFlip}\r\n                    className=\"btn btn-secondary\"\r\n                  >\r\n                    flip\r\n                    <ReloadOutline\r\n                      color={\"#00000\"}\r\n                      title={\"turn-card\"}\r\n                      style={{ marginLeft: \"10px\" }}\r\n                    />\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    type=\"btn\"\r\n                    onClick={handleClick}\r\n                    className=\"btn btn-primary\"\r\n                  >\r\n                    next\r\n                    <ChevronForwardOutline\r\n                      color={\"#00000\"}\r\n                      title={\"change-card\"}\r\n                    />\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"card-body\">\r\n            <h4>Not enough cards</h4>\r\n            <p>\r\n              You need at least 3 cards to study. There\r\n              {currentCards.length > 1 ? \" are \" : \" is \"}\r\n              {currentCards.length}\r\n              {currentCards.length > 1 ? \" cards \" : \" card\"} in this deck.\r\n            </p>\r\n            <div className=\"container d-flex\">\r\n              <div className=\"row\">\r\n                <AddCardsBtn/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Study;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { createDeck, listDecks } from \"../utils/api/index\";\r\n\r\nfunction CreateDeck({ setCurrentDecks, currentDecks, deck, setDeck }) {\r\n  const marginLeft = { margin: \"0 0 0 10px\" };\r\n  const history = useHistory();\r\n  const initialDeck = {\r\n    description: \"Enter the description of your new deck.\",\r\n    name: \"Enter a name for your new deck.\",\r\n  }\r\n\r\n  useEffect(() => {\r\n    setDeck( initialDeck);\r\n  }, []);\r\n\r\n  function handleChange({ target }) {\r\n    setDeck(\r\n      prevState =>\r\n        (prevState = {\r\n          ...deck,\r\n          [target.name]: target.value,\r\n        })\r\n    );\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    const name = event.target.children[0].children[0].children[0].value;\r\n    const description = event.target.children[1].children[0].children[0].value;\r\n    const deckId = currentDecks.length + 1;\r\n    const newDeck = {\r\n      name: name,\r\n      description: description,\r\n      deckId: deckId,\r\n      cards: [],\r\n    };\r\n    \r\n    createDeck(newDeck);\r\n    listDecks().then(setCurrentDecks);\r\n    history.push(`/decks/${deckId}`)\r\n    setDeck(initialDeck)\r\n  }\r\n\r\n  function returnHome() {\r\n    history.push(\"/\");\r\n  }\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"container-fluid d-flex justify-content-center\"\r\n        style={{ marginBottom: \"20px\" }}\r\n      >\r\n        <nav aria-label=\"breadcrum\" className=\"navbar navbar-light bg-light col-9\">\r\n          <ol style={{ listStyle: \"none\", display: \"flex\" }}>\r\n            <li className=\"breadcrumb-item\">\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n\r\n            <li className=\"breadcrumb-item\">Decks</li>\r\n            <li className=\"breadcrumb-item active\">New</li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n\r\n      <div className=\"container col-9\">\r\n        <div>\r\n          <h2>Create Deck</h2>\r\n        </div>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"mb-3\">\r\n            <label for=\"name\" style={{ width: \"100%\" }} className=\"form-label\">\r\n              Name\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                value={deck.name}\r\n                onChange={handleChange}\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label\r\n              for=\"description\"\r\n              style={{ width: \"100%\" }}\r\n              className=\"form-label\"\r\n            >\r\n              Description\r\n              <textarea\r\n                rows=\"5\"\r\n                className=\"form-control\"\r\n                id=\"description\"\r\n                name=\"description\"\r\n                onChange={handleChange}\r\n                value={deck.description}\r\n              />\r\n            </label>\r\n          </div>\r\n          <button onClick={returnHome} type=\"button\" className=\"btn btn-secondary\">\r\n            Cancel\r\n          </button>\r\n          <button type=\"submit\" className=\"btn btn-primary\" style={marginLeft}>\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateDeck;\r\n","import React from \"react\";\r\nimport { deleteCard, listCards } from \"../utils/api\";\r\nimport { TrashOutline } from \"react-ionicons\";\r\n\r\n\r\nfunction DeleteDeckBtn({ setCurrentCards }) {\r\n  function deleter(event) {\r\n    if (window.confirm(\"Do you really want to delete this card you?\")) {\r\n      const clickedCard = event.target.closest(\".card\");\r\n      deleteCard(event.target.closest(\".card\").id);\r\n      listCards(clickedCard.dataset.deckid).then(setCurrentCards);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <button\r\n          className=\"btn btn-danger\"\r\n          onClick={deleter}\r\n          style={{ marginTop: \"10px\" }}\r\n        >\r\n          <div className=\"container d-flex\">\r\n\r\n              {<TrashOutline color={\"#00000\"} width=\"50%\" />}\r\n           \r\n          </div>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeleteDeckBtn;\r\n","import React from \"react\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport { PencilOutline } from \"react-ionicons\";\r\n\r\nfunction EditDeckBtn() {\r\n  const { url } = useRouteMatch();\r\n  return (\r\n    <Link to={`${url}/edit`} class=\"btn btn-secondary\">\r\n      <PencilOutline color={\"#00000\"} title={\"edit-deck\"} style={{marginRight:\"10px\"}} />\r\n      Edit\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default EditDeckBtn;\r\n","import React from \"react\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport { PencilOutline } from \"react-ionicons\";\r\n\r\n\r\nfunction EditCardBtn({ cardId }) {\r\n  const { url } = useRouteMatch();\r\n  return (\r\n    <Link to={`${url}/cards/${cardId}/edit`} className=\"btn btn-secondary container\">\r\n      <PencilOutline color={\"#00000\"} title=\"edit-card\" width=\"50%\" />\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default EditCardBtn;\r\n","import React, { useEffect } from \"react\";\r\nimport { readDeck } from \"../utils/api/index\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport DeleteCardBtn from \"../components/DeleteCardBtn\";\r\nimport EditDeckBtn from \"../components/EditDeckBtn\";\r\nimport StudyBtn from \"../components/StudyBtn\";\r\nimport DeleteDeckBtn from \"../components/DeleteDeckBtn\";\r\nimport EditCardBtn from \"../components/EditCardBtn\";\r\nimport AddCardsBtn from \"../components/AddCardsBtn\";\r\n\r\nfunction View({\r\n  setCardInfo,\r\n  currentCard,\r\n  currentDeck,\r\n  setCurrentDeck,\r\n  setCurrentCards,\r\n  currentCards,\r\n}) {\r\n  const { deckId } = useParams();\r\n  useEffect(() => {\r\n    async function getDeck() {\r\n      const result = await readDeck(deckId);\r\n      const card = currentCard - 1;\r\n      try {\r\n        setCardInfo({\r\n          id: result.cards[card].id,\r\n          front: result.cards[card].front,\r\n          back: result.cards[card].back,\r\n          deckId: result.cards[card].deckId,\r\n        });\r\n      } catch (error) {\r\n        \r\n      }\r\n\r\n      setCurrentDeck(result);\r\n      setCurrentCards(result.cards);\r\n    }\r\n\r\n    getDeck();\r\n  }, [currentCard]);\r\n\r\n  function cardList() {\r\n    let list = []\r\n    if (currentCards.length > 0) {\r\n       list = currentCards.map((card) => {\r\n        return (\r\n          <div\r\n            data-deckid={card.deckId}\r\n            id={card.id}\r\n            className=\"container card col\"\r\n            style={{ margin: \"20px 0 20px 0 \", padding: \"20px 0 20px 0\" }}\r\n          >\r\n            <div className=\"d-flex flex-row align-items-center\">\r\n              <p className=\"col-5\">{card.front}</p>\r\n              <p className=\"col-5\">{card.back}</p>\r\n              <div className=\"d-flex flex-column col-2 justify-content-end\">\r\n                <div>\r\n                  <EditCardBtn cardId={card.id} />\r\n                </div>\r\n                <div>\r\n                  <DeleteCardBtn setCurrentCards={setCurrentCards} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      });\r\n    } else {\r\n      list = <p>There are no cards in this deck!</p>\r\n    }\r\n\r\n\r\n    return list;\r\n  }\r\n\r\n  const list = cardList();\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container-fluid d-flex justify-content-center\"\r\n        style={{ marginBottom: \"20px\" }}\r\n      >\r\n        <nav aria-label=\"breadcrum\" className=\"navbar navbar-light bg-light col-9\">\r\n          <ol style={{ listStyle: \"none\", display: \"flex\" }}>\r\n            <li className=\"breadcrumb-item\">\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n\r\n            <li className=\"breadcrumb-item\">\r\n              Decks\r\n            </li>\r\n            <li className=\"breadcrumb-item active\">{currentDeck.name}</li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n      <div\r\n        className=\"card container-fluid col-9\"\r\n        style={{ margin: \"margin: 20px 20px 20px 20px \" }}\r\n      >\r\n        <div className=\"card-body\">\r\n          <h3 className=\"card-title\">{currentDeck.name}</h3>\r\n          <div className=\"card-text\">{currentDeck.description}</div>\r\n          <div className=\"container\">\r\n            <div className=\"row\" style={{ marginTop: \"20px\" }}>\r\n              <div className=\"containter col\">\r\n                <EditDeckBtn />\r\n                <StudyBtn />\r\n                <AddCardsBtn />\r\n              </div>\r\n              <DeleteDeckBtn />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container col-9\" style={{ marginTop: \"10px\" }}>\r\n        <h2>Cards</h2>\r\n        <div>{list}</div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default View;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link, useRouteMatch, useParams, useHistory } from \"react-router-dom\";\r\nimport { readDeck, updateDeck } from \"../utils/api/index\";\r\n\r\nfunction EditDeck({ currentDeck, setCurrentDeck }) {\r\n  const { url } = useRouteMatch();\r\n  const { deckId } = useParams();\r\n  const marginLeft = { margin: \"0 0 0 10px\" };\r\n  const history = useHistory()\r\n  useEffect(() => {\r\n    readDeck(deckId).then(setCurrentDeck);\r\n  }, []);\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    if (window.confirm(\"Are you sure you would like to edit this deck?\")) {\r\n      updateDeck(currentDeck);\r\n      goBack()\r\n    } else {\r\n        goBack()\r\n    }\r\n  }\r\n\r\n  function handleChange({ target }) {\r\n    setCurrentDeck(\r\n      prevState =>\r\n        (prevState = {\r\n          ...currentDeck,\r\n          [target.name]: target.value,\r\n        })\r\n    );\r\n  }\r\n\r\n  function goBack() {\r\n    history.push(`/decks/${deckId}`, \"_self\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"container-fluid d-flex justify-content-center\"\r\n        style={{ marginBottom: \"20px\" }}\r\n      >\r\n        <nav aria-label=\"breadcrum\" className=\"navbar navbar-light bg-light col-9\" >\r\n          <ol style={{ listStyle: \"none\", display: \"flex\" }}>\r\n            <li claclassNamess=\"breadcrumb-item\">\r\n              <Link to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"breadcrumb-item\">\r\n              <Link to={url} >\r\n              {currentDeck.name}\r\n              </Link>\r\n            </li>\r\n            <li className=\"breadcrumb-item active\"> \r\n              Edit\r\n            </li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n\r\n      <div className=\"container col-9\">\r\n        <div>\r\n          <h2>Edit Deck</h2>\r\n        </div>\r\n        <form onSubmit={handleSubmit}>\r\n          <div claclassNamess=\"mb-3\">\r\n            <label for=\"name\" style={{ width: \"100%\" }} className=\"form-label\">\r\n              Name\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                value={currentDeck.name}\r\n                onChange={handleChange}\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label\r\n              for=\"description\"\r\n              style={{ width: \"100%\" }}\r\n              className=\"form-label\"\r\n            >\r\n              Description\r\n              <textarea\r\n                rows=\"5\"\r\n                className=\"form-control\"\r\n                id=\"description\"\r\n                name=\"description\"\r\n                onChange={handleChange}\r\n                value={currentDeck.description}\r\n              />\r\n            </label>\r\n          </div>\r\n          <button onClick={goBack} type=\"button\" className=\"btn btn-secondary\">\r\n            Cancel\r\n          </button>\r\n          <button type=\"submit\" className=\"btn btn-primary\" style={marginLeft}>\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditDeck;\r\n","import React, { useEffect } from \"react\";\r\nimport { readCard, updateCard } from \"../utils/api/index\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction EditCard({ currentCard, setCurrentCard, currentDeck }) {\r\n  const { cardId, deckId } = useParams();\r\n  const marginLeft = { margin: \"0 0 0 10px\" };\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    readCard(cardId).then(setCurrentCard);\r\n  }, []);\r\n\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    if (window.confirm(\"Are you sure you would like to edit this card?\")) {\r\n      updateCard(currentCard);\r\n      goBack()\r\n    } \r\n  }\r\n\r\n  function handleChange({ target }) {\r\n    setCurrentCard(\r\n      (prevState) =>\r\n        (prevState = {\r\n          ...currentCard,\r\n          [target.name]: target.value,\r\n        })\r\n    );\r\n  }\r\n\r\n  function goBack() {\r\n    history.push(`/decks/${deckId}`, \"_self\");\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container-fluid d-flex justify-content-center\"\r\n        style={{ marginBottom: \"20px\" }}\r\n      >\r\n        <nav aria-label=\"breadcrum\" className=\"navbar navbar-light bg-light col-9\">\r\n          <ol style={{ listStyle: \"none\", display: \"flex\" }}>\r\n            <li className=\"breadcrumb-item\">\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n\r\n            <li className=\"breadcrumb-item\">\r\n              <Link to={`/decks/${deckId}`}>Deck {currentDeck.name}</Link>\r\n            </li>\r\n            <li claclassNamess=\"breadcrumb-item active\">{`Edit Card ${cardId}`}</li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n      <div\r\n        className=\"card col-9 container\"\r\n        style={{ margin: \"margin: 20px 20px 20px 20px \" }}\r\n      >\r\n        <div className=\"card-body\">\r\n          <h3 className=\"card-title\">Edit Card</h3>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"mb-3\">\r\n              <label for=\"front\" style={{ width: \"100%\" }} className=\"form-label\">\r\n                Front\r\n                <textarea\r\n                  rows=\"5\"\r\n                  className=\"form-control\"\r\n                  id=\"back\"\r\n                  name=\"front\"\r\n                  onChange={handleChange}\r\n                  value={currentCard.front}\r\n                />\r\n              </label>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label\r\n                for=\"back\"\r\n                style={{ width: \"100%\" }}\r\n                className=\"form-label\"\r\n              >\r\n                Back\r\n                <textarea\r\n                  rows=\"5\"\r\n                  className=\"form-control\"\r\n                  id=\"back\"\r\n                  name=\"back\"\r\n                  onChange={handleChange}\r\n                  value={currentCard.back}\r\n                />\r\n              </label>\r\n            </div>\r\n            <button onClick={goBack} type=\"button\" className=\"btn btn-secondary\">\r\n              Cancel\r\n            </button>\r\n            <button type=\"submit\" className=\"btn btn-primary\" style={marginLeft}>\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditCard;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { createCard, readDeck } from \"../utils/api/index\";\r\n\r\nfunction AddCards({ currentCard, setCurrentCard, currentDeck, setCurrentDeck }) {\r\n  const marginLeft = { margin: \"0 0 0 10px\" };\r\n  const { deckId } = useParams();\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    readDeck(deckId).then(setCurrentDeck)\r\n    setCurrentCard({\r\n      ...currentCard,\r\n      front: \"Front of card\",\r\n      back: \"Back of card\",\r\n    });\r\n  }, []);\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    createCard(deckId, currentCard);\r\n    alert(\"Your new card was added to the deck!\");\r\n    setCurrentCard(\r\n      (prevState) =>\r\n        (prevState = {\r\n          ...currentCard,\r\n          front: \"Front of card\",\r\n          back: \"Back of card\",\r\n        })\r\n    );\r\n  }\r\n\r\n  function handleChange({ target }) {\r\n    setCurrentCard(\r\n      (prevState) =>\r\n        (prevState = {\r\n          ...currentCard,\r\n          [target.name]: target.value,\r\n        })\r\n    );\r\n  }\r\n\r\n  function goBack() {\r\n    history.push(`/decks/${deckId}`);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container-fluid d-flex justify-content-center\"\r\n        style={{ marginBottom: \"20px\" }}\r\n      >\r\n        <nav aria-label=\"breadcrum\" className=\"navbar navbar-light bg-light col-9\">\r\n          <ol style={{ listStyle: \"none\", display: \"flex\" }}>\r\n            <li className=\"breadcrumb-item\">\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n\r\n            <li className=\"breadcrumb-item\">\r\n              <Link to={`/decks/${deckId}`}>{currentDeck.name}</Link>\r\n            </li>\r\n            <li className=\"breadcrumb-item active\">{`Add Card`}</li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n\r\n      <div\r\n        className=\"card col-9 container\"\r\n        style={{ margin: \"margin: 20px 20px 20px 20px \" }}\r\n      >\r\n        <div className=\"card-body\">\r\n          <h3 className=\"card-title\">{currentDeck.name}: Add Card</h3>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"mb-3\">\r\n              <label for=\"front\" style={{ width: \"100%\" }} className=\"form-label\">\r\n                Front\r\n                <textarea\r\n                  rows=\"5\"\r\n                  className=\"form-control\"\r\n                  id=\"back\"\r\n                  name=\"front\"\r\n                  onChange={handleChange}\r\n                  value={currentCard.front}\r\n                />\r\n              </label>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label for=\"back\" style={{ width: \"100%\" }} className=\"form-label\">\r\n                Back\r\n                <textarea\r\n                  rows=\"5\"\r\n                  className=\"form-control\"\r\n                  id=\"back\"\r\n                  name=\"back\"\r\n                  onChange={handleChange}\r\n                  value={currentCard.back}\r\n                />\r\n              </label>\r\n            </div>\r\n            <button onClick={goBack} type=\"button\" className=\"btn btn-secondary\">\r\n              Cancel\r\n            </button>\r\n            <button type=\"submit\" className=\"btn btn-primary\" style={marginLeft}>\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddCards;\r\n","import React, { useState } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport Home from \"../Screens/Home\";\nimport Study from \"../Screens/Study\";\nimport CreateDeck from \"../Screens/CreateDeck\";\nimport { decks } from \"../data/db.json\";\nimport View from \"../Screens/View\";\nimport EditDeck from \"../Screens/EditDeck\";\nimport EditCard from \"../Screens/EditCard\";\nimport AddCards from \"../Screens/AddCards\";\n\nfunction Layout() {\n  const [currentDecks, setCurrentDecks] = useState(decks);\n  const [currentDeck, setCurrentDeck] = useState([]);\n  const [currentCards, setCurrentCards] = useState([]);\n  const [currentCard, setCurrentCard] = useState(1);\n  const [cardInfo, setCardInfo] = useState({\n    id: 1,\n    front: \"\",\n    back: \"\",\n    deckId: 1,\n  });\n  const [deck, setDeck] = useState({});\n\n  return (\n    <>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <div className=\"container\">\n            <Home\n              currentCards={currentCards}\n              setCurrentCards={setCurrentCards}\n            />\n          </div>\n        </Route>\n        <Route path=\"/decks/:deckId/study\">\n          <Study\n            cardInfo={cardInfo}\n            setCardInfo={setCardInfo}\n            currentDeck={currentDeck}\n            setCurrentDeck={setCurrentDeck}\n            currentCard={currentCard}\n            setCurrentCard={setCurrentCard}\n            currentCards={currentCards}\n            setCurrentCards={setCurrentCards}\n          />\n        </Route>\n        <Route path=\"/decks/new\">\n          <CreateDeck\n            currentDecks={currentDecks}\n            setCurrentDecks={setCurrentDecks}\n            deck={deck}\n            setDeck={setDeck}\n          />\n        </Route>\n        <Route path={\"/decks/:deckId/cards/new\"}>\n          <AddCards currentDeck={currentDeck} setCurrentCard={setCurrentCard} currentCard={currentCard} setCurrrentDeck={setCurrentDeck}/>\n        </Route>\n\n        <Route path=\"/decks/:deckId/cards/:cardId/edit\">\n          <EditCard\n            currentCard={currentCard}\n            setCurrentCard={setCurrentCard}\n            currentDeck={currentDeck}\n          />\n        </Route>\n        <Route path=\"/decks/:deckId/edit\">\n          <EditDeck\n            currentDeck={currentDeck}\n            setCurrentDeck={setCurrentDeck}\n            deck={deck}\n            setDeck={setDeck}\n          />\n        </Route>\n        <Route path=\"/decks/:deckId\">\n          <View\n            currentDecks={currentDecks}\n            setCurrentDecks={setCurrentDecks}\n            cardInfo={cardInfo}\n            setCardInfo={setCardInfo}\n            currentCard={currentCard}\n            currentDeck={currentDeck}\n            setCurrentDeck={setCurrentDeck}\n            setCurrentCards={setCurrentCards}\n            currentCards={currentCards}\n          />\n        </Route>\n        <Route path=\"/decks/:deckId/edit\">\n          <EditDeck deck={deck} setDeck={setDeck} />\n        </Route>\n        <Route>\n          <NotFound />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./Layout\";\n\n/**\n * App is a wrapper for <Layout>, you should not need to change this file.\n */\n\nfunction App() {\n  return (\n    <div className=\"app-routes\">\n      <Switch>\n        <Route path=\"/\">\n          <Layout />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}